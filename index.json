[{"authors":null,"categories":null,"content":" cm-burn is a program to burn many SD cards for the preparation of building clusters with Raspberry Pi\u0026rsquo;s. The program is developed in Python and is portable on Linux, Windows, and OSX. It allows users to create readily bootable SD cards that have the network configured, contain a public ssh key from your machine that you used to configure the cards. The unique feature is that you can burn multiple cards in a row.\nA sample command invocation looks like:\ncm-burn —-name red[5-7] \\ --key ~/.ssh/id_rsa.pub \\ —-ips 192.168.1.[5-7] \\ —-image 2018-06-27-raspbian-stretch  This command creates 3 SD cards where the hostnames red5, red6, red 7 with the network addresses 192.168.1.5, 192.168.1.6, and 192.168.1.7. The public key is added to the authorized_keys file of the pi user. The password login is automatically disabled and only the ssh key authentication is enabled.\nRefernces  Project Web Page: https://github.com/cloudmesh-community/cm-burn  ","date":1543041760,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543041760,"objectID":"61f1f0f189918f909161729255ce5c71","permalink":"/project/cloudmesh-pi-burn/","publishdate":"2018-11-24T01:42:40-05:00","relpermalink":"/project/cloudmesh-pi-burn/","section":"project","summary":"cm-burn is a program to burn many SD cards for the preparation of building clusters with Raspberry Pi\u0026rsquo;s. The program is developed in Python and is portable on Linux, Windows, and OSX. It allows users to create readily bootable SD cards that have the network configured, contain a public ssh key from your machine that you used to configure the cards. The unique feature is that you can burn multiple cards in a row.","tags":[],"title":"Cloudmesh Pi Burn","type":"project"},{"authors":null,"categories":null,"content":"","date":1543041746,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543041746,"objectID":"bbc557acbeb7e1c28ec4ed45b2d3fea7","permalink":"/project/cloudmesh-nist/","publishdate":"2018-11-24T01:42:26-05:00","relpermalink":"/project/cloudmesh-nist/","section":"project","summary":"","tags":[],"title":"Cloudmesh Nist","type":"project"},{"authors":null,"categories":null,"content":"","date":1543041679,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543041679,"objectID":"33fd14a46c5db7e8ee3ff78d3c904765","permalink":"/project/cloudmesh-graphql/","publishdate":"2018-11-24T01:41:19-05:00","relpermalink":"/project/cloudmesh-graphql/","section":"project","summary":"","tags":[],"title":"Cloudmesh Graphql","type":"project"},{"authors":null,"categories":null,"content":"","date":1543041663,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543041663,"objectID":"b218f34f91b380d983a05e251c500336","permalink":"/project/cloudmesh-client/","publishdate":"2018-11-24T01:41:03-05:00","relpermalink":"/project/cloudmesh-client/","section":"project","summary":"OpenStack","tags":["Software","Cloudmesh"],"title":"Cloudmesh Client","type":"project"},{"authors":null,"categories":[],"content":"","date":1543041190,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543041190,"objectID":"52caaec346d1cdc9d7ffdae9a9fc8ac4","permalink":"/post/version-4/","publishdate":"2018-11-24T01:33:10-05:00","relpermalink":"/post/version-4/","section":"post","summary":"","tags":[],"title":"Version 4","type":"post"},{"authors":null,"categories":[],"content":"","date":1543041187,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543041187,"objectID":"7c7361c3140949e3984e32fa7a623182","permalink":"/post/version-3/","publishdate":"2018-11-24T01:33:07-05:00","relpermalink":"/post/version-3/","section":"post","summary":"","tags":[],"title":"Version 3","type":"post"},{"authors":null,"categories":[],"content":"","date":1543041184,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543041184,"objectID":"2e998e130766febef3c9f747092bafea","permalink":"/post/version-2/","publishdate":"2018-11-24T01:33:04-05:00","relpermalink":"/post/version-2/","section":"post","summary":"","tags":[],"title":"Version 2","type":"post"},{"authors":null,"categories":[],"content":"","date":1543041182,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543041182,"objectID":"8e6cac9e2ac4f778aa7ff58370c035bc","permalink":"/post/version-1/","publishdate":"2018-11-24T01:33:02-05:00","relpermalink":"/post/version-1/","section":"post","summary":"","tags":[],"title":"Version 1","type":"post"},{"authors":null,"categories":[],"content":"","date":1543041173,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543041173,"objectID":"27a2681a821d28a8aad6f0f8602b68d7","permalink":"/post/version-graphql/","publishdate":"2018-11-24T01:32:53-05:00","relpermalink":"/post/version-graphql/","section":"post","summary":"","tags":[],"title":"Version Graphql","type":"post"},{"authors":["Geoffrey C. Fox","Gregor von Laszewski","Fugang Wang"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"051d3a0fbea130ef3921388983a4b664","permalink":"/publication/las-18-bigdata/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/las-18-bigdata/","section":"publication","summary":"","tags":["Big Data","Analytics","Cloud","Book","ePub"],"title":"Big Data Applications and Analytics","type":"publication"},{"authors":["Gregor von Laszewski"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"29e11f077da492689879ff59b70375e0","permalink":"/publication/las-18-software-1/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/las-18-software-1/","section":"publication","summary":"","tags":["Big Data","Software","Book","ePub"],"title":"Big Data Software","type":"publication"},{"authors":["Gregor von Laszewski"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"17edcde3b4e73d523b41c3873661e194","permalink":"/publication/las-18-software-2/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/las-18-software-2/","section":"publication","summary":"","tags":["Big Data","Software","Book","ePub"],"title":"Big Data Software","type":"publication"},{"authors":["Gregor von Laszewski","Fugang Wang","Geoffrey C. Fox"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"faf3d0289a09631fa70a94251e0befbd","permalink":"/publication/las-18-cloudcomputing/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/las-18-cloudcomputing/","section":"publication","summary":"","tags":["Cloud","Book","ePub"],"title":"Cloud Computing","type":"publication"},{"authors":["Gregor von Laszewski"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"710e15f51daa0a143cf1eb268c50d88d","permalink":"/publication/las-18-cloudcomputing-pi/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/las-18-cloudcomputing-pi/","section":"publication","summary":"","tags":["Raspberry","Cloud","Book","ePub"],"title":"Cloud Computing with the Raspberry Pi","type":"publication"},{"authors":["Gregor von Laszewski"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"25be11a6156bfcadbdaf2fb090664e99","permalink":"/publication/las-18-tecc-1/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/las-18-tecc-1/","section":"publication","summary":"","tags":["Big Data","Software","Book","ePub"],"title":"Cloud and Big Data Technologies","type":"publication"},{"authors":["Mark Miller"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"46aaa4c6deac4cdb5df4bc5fb4f89100","permalink":"/publication/fa-18-523-63-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-63-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: A Cloud Computing Approach to Financial Decision Automation","type":"publication"},{"authors":["Richa Rastogi"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"f53d53321bbe3174425a54d2c3326e30","permalink":"/publication/fa-18-516-18-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-18-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: AWS Lambda","type":"publication"},{"authors":["Ian Sims"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"5ce666e91c1890c1a4247f133b83210b","permalink":"/publication/fa-18-516-22-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-22-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: AWS-EMR","type":"publication"},{"authors":["Harika Putti"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"1f894a3c9bca6be03c6cddf4f41b2054","permalink":"/publication/fa-18-523-81-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-81-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Analysis of Global Commodity Statistics using PySpark and Watson Analytics","type":"publication"},{"authors":["Bo Li"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"0bf72fb9c0296ad58084d1e6c09cbee3","permalink":"/publication/fa-18-523-85-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-85-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Analytics in Consumer Behaviors in Black Friday with TensorFlow","type":"publication"},{"authors":["Daniel Hinders"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"2a51bfec0acff6ccf0a7abefed01f78c","permalink":"/publication/fa-18-523-56-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-56-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Apache NiFi","type":"publication"},{"authors":["Daniel Hinders"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"d0ac87576d56c59c3c8bef7402994687","permalink":"/publication/fa-18-523-56-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-56-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Apache NiFi Chapter","type":"publication"},{"authors":["Paul Filliman"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"4e09a4633eeb961adcd12e913562cc3f","permalink":"/publication/fa-18-516-06-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-06-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Azure Data Services","type":"publication"},{"authors":["Bo Li"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"a1609676a329c0c2fd62241b9fc2b656","permalink":"/publication/fa-18-523-85-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-85-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Big Data Analytics in E-commerce","type":"publication"},{"authors":["Sushmita Dash"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"b1f1bdb2525f4523602d841aeb0c63b7","permalink":"/publication/fa-18-523-70-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-70-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Big Data Applications in recommender systems","type":"publication"},{"authors":["Sushmita Dash"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"f0588750be33c456bc2b1402489feb68","permalink":"/publication/fa-18-523-70-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-70-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Big Data Applications in recommender systems","type":"publication"},{"authors":["Manek Bahl","Sohan Rai"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"8bbdd04601cadd04fb8e0a6f318b75bc","permalink":"/publication/fa-18-523-62-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-62-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Big Data and Streaming","type":"publication"},{"authors":["Jeff Liu"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"049ed28e9bc1cc5b2536139dcee1ba8f","permalink":"/publication/fa-18-523-86-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-86-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Big data in SAP Ariba","type":"publication"},{"authors":["Wang Tong","Yeyi Ma"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"ac12ce19cca5a50b1cf2b259962a3596","permalink":"/publication/fa-18-523-73-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-73-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Big data in education","type":"publication"},{"authors":["Gerald Manipon"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"0aa9e6c19d07771bea48d27fc4ca29dd","permalink":"/publication/fa-18-516-14-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-14-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Cloud Computing Use Cases","type":"publication"},{"authors":["Murali Cheruvu"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"591a8401db428b5fd996809e55ac204b","permalink":"/publication/fa-18-516-11-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-11-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Cloud Foundry - Open Source PaaS","type":"publication"},{"authors":["Brad Pope"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"b264b56a08843355f1b8c75232fd5b4e","permalink":"/publication/fa-18-516-17-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-17-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Cloud Security Alliance (CSA)","type":"publication"},{"authors":["Mihir Shanishchara","Vineet Barshikar"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"9f068fb94f25a6cdc905badee3977a23","permalink":"/publication/fa-18-516-21-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-21-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Cloudmesh Graphql App","type":"publication"},{"authors":["Paul Filliman"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"6dc27b9c6410c1dd6ccf0c27caa5b8a8","permalink":"/publication/fa-18-516-06-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-06-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Creating a RESTful API Service Using MongoDB and Azure SQL Database","type":"publication"},{"authors":["Uma Bhargavi Kota","Jatinkumar Bhutka"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"e8e6315078ff9578648cb65469da3606","permalink":"/publication/fa-18-523-71-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-71-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Credit Card Defaulter Analysis","type":"publication"},{"authors":["Nhi Tran"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"0424793bfd5a912443343667bcb79c97","permalink":"/publication/fa-18-523-83-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-83-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Credit scoring algorithm and its implementation in production","type":"publication"},{"authors":["Prajakta Patil","Sahithya Sridhar"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"3f8e489b89b38386eaf319a7982711a1","permalink":"/publication/fa-18-523-65-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-65-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Data analysis Of Yelp reviews","type":"publication"},{"authors":["Vafa Andalibi"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"9a2f98ff76cc9abce867e2c06331706d","permalink":"/publication/fa-18-516-26-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-26-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Develope the remote parallel jobs tool with slurm support and experiment interface","type":"publication"},{"authors":["Selahattin Akkas"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"32c47fe6d361458aaddd53c6be012cd7","permalink":"/publication/fa-18-523-68-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-68-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Distributed TensorFlow","type":"publication"},{"authors":["Ritu Sanjay"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"62e989cb1407a03e4c92fa90636a785c","permalink":"/publication/fa-18-523-66-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-66-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Do I buy or sell? - Using Big Data to predict Stock Prices","type":"publication"},{"authors":["Murali Cheruvu","Anand Sriramulu"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"38b1c99972537b20289ff60fbd0d5ffa","permalink":"/publication/fa-18-516-11-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-11-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Explore OpenFaaS Development and Deployment Aspects","type":"publication"},{"authors":["Varun Joshi"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"32ec7af53e5cef144db4b9a665eab77e","permalink":"/publication/fa-18-516-08-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-08-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: GPPR","type":"publication"},{"authors":["Mihir Shanishchara","Vineet Barshikar"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"cc04dbaf36ee4634ab6547e3dad2d458","permalink":"/publication/fa-18-516-21-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-21-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: GraphQL","type":"publication"},{"authors":["Anna Heine"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"46c4c92c3ce1adf9557b0696dada139c","permalink":"/publication/fa-18-523-52-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-52-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Guided Analytics Using Knime","type":"publication"},{"authors":["Divya Rajendran"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"6b03346eee6903e0cb18319458e60c81","permalink":"/publication/fa-18-523-57-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-57-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Historical Storm Data Analysis with HBase","type":"publication"},{"authors":["Gerald Manipon"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"f9ab664b70c08b640d45c0c11310cc85","permalink":"/publication/fa-18-516-14-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-14-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: HySDS on Kubernetes: ARIA InSAR Processing on XSEDE Jetstream","type":"publication"},{"authors":["Harika Putti"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"fdee3a863fb00679dc02ac5ff28be031","permalink":"/publication/fa-18-523-81-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-81-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: IBM Cognos Business Intelligence","type":"publication"},{"authors":["Selahattin Akkas"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"4aacc196fd07749c16d6bc05422cb1b0","permalink":"/publication/fa-18-523-68-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-68-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Image Classification using k-means on TensorFlow","type":"publication"},{"authors":["Izolda Fetko","Nishad Tupe","Vishal Bhoyar"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"4433bac077458d96cb28342482ed3f91","permalink":"/publication/fa-18-523-60-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-60-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Kickstarter Projects Analysis","type":"publication"},{"authors":["De'Angelo Rutledge"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"58fe3ca8e5f26f36a31918d5cf1ef75f","permalink":"/publication/fa-18-516-19-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-19-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: LAMP Stacks - Linux Apache, MySql, PHP ","type":"publication"},{"authors":["Richa Rastogi"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"85e2567d457b305d6a7680016e6dcce8","permalink":"/publication/fa-18-516-18-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-18-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Manage Files across multiple Cloud Providers","type":"publication"},{"authors":["Varun Joshi"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"84edcd6a77f19fc1b854213011e67973","permalink":"/publication/fa-18-516-08-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-08-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Managing AWS Lambda Using REST API","type":"publication"},{"authors":["Richa Rastogi"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"04286c5b93955f3c2fc4de9a5b5ad87b","permalink":"/publication/fa-18-516-18-paper-1/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-18-paper-1/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: MapReduce with Hadoop and Spark","type":"publication"},{"authors":["Chaitanya Kakarala"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"2fa5b4360d659678effdb4ca087d36a5","permalink":"/publication/fa-18-523-53-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-53-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Microservices and Kafka","type":"publication"},{"authors":["Izolda Fetko","Nishad Tupe","Vishal Bhoyar"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"b38c974c003c230b4523f3cffa421119","permalink":"/publication/fa-18-523-60-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-60-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: MongoDB in Python","type":"publication"},{"authors":["Anna Heine"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"975de3534c8923feab49ff96a06991ec","permalink":"/publication/fa-18-523-52-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-52-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Morphological Image-based Profiling of Cells for Scientific Community","type":"publication"},{"authors":["Jay Stockwell"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"8725ee142133729257abf091834949c8","permalink":"/publication/fa-18-523-61-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-61-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Natural Language Processing as related to Big Data","type":"publication"},{"authors":["Prajakta Patil","Sahithya Sridhar"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"1f8da68f0176b12d03d046728ccccf44","permalink":"/publication/fa-18-523-65-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-65-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Natural language processing","type":"publication"},{"authors":["John Leite"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"3068a8d0909fbb90a6ce65b96aa89836","permalink":"/publication/fa-18-523-88-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-88-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: None","type":"publication"},{"authors":["John Leite"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"9d33d27f13709345b668835d94c1f93b","permalink":"/publication/fa-18-523-88-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-88-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: None","type":"publication"},{"authors":["Vafa Andalibi"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"620ce1560f7e210577320864b6cf7d61","permalink":"/publication/fa-18-516-26-paper-1/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-26-paper-1/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: OpenWhisk","type":"publication"},{"authors":["Chaitanya Kakarala"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"1183668c8a579e3d49c2b1ca8192e9f4","permalink":"/publication/fa-18-523-53-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-53-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Orchestrating Microservices for Credit Scoring Application using Kafka.","type":"publication"},{"authors":["Vafa Andalibi"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"c7207d4b3a3aa68b6e8239ace6992a77","permalink":"/publication/fa-18-516-26-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-26-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Parallel Programming in Python","type":"publication"},{"authors":["Manek Bahl","Sohan Rai"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"5f64603d8fe9a2a0e2dbdbca1c3a9ccb","permalink":"/publication/fa-18-523-62-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-62-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Predicting English Premier League Results Based on Tweets","type":"publication"},{"authors":["Divya Rajendran"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"8d495bad9b870f255099d537c6f5aac0","permalink":"/publication/fa-18-523-57-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-57-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: PyTorch","type":"publication"},{"authors":["Adam Hilgenkamp"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"21427470c55c6510a4da37703ac81ab7","permalink":"/publication/fa-18-523-84-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-84-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Raspberry Pi Cassandra Cluster","type":"publication"},{"authors":["Adam Hilgenkamp"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"348bfea7e449b12661ce61356bb8134d","permalink":"/publication/fa-18-523-84-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-84-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Raspberry Pi IoT Sensors","type":"publication"},{"authors":["Uma Bhargavi Kota","Jatinkumar Bhutka"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"96a984c1813176aa9b060e17c75c8066","permalink":"/publication/fa-18-523-71-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-71-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Role of Big Data in IoT","type":"publication"},{"authors":["Ian Sims"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"83505ffb3d81ffb4ca586fc73f572f73","permalink":"/publication/fa-18-516-22-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-22-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Running a Jupyter Notebook Analysis on AWS EMR Utilizing a REST Service","type":"publication"},{"authors":["Jeff Liu"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"8ef6f983e152a2ad39557e6a6b6ee68c","permalink":"/publication/fa-18-523-86-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-86-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: SAP","type":"publication"},{"authors":["Ritu Sanjay"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"e5721dc9f96bdc5d9aa6f4373fe79aa5","permalink":"/publication/fa-18-523-66-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-66-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: SAS Viya","type":"publication"},{"authors":["Brad Pope"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"e313c119c71e57aaabd5882e0d78ddf0","permalink":"/publication/fa-18-516-17-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-17-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: Scalable Data Processing for Retail","type":"publication"},{"authors":["Mark Miller"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"3553c6ffc846836e546425aeb8bf5677","permalink":"/publication/fa-18-523-63-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-63-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Scikit-learn","type":"publication"},{"authors":["Anand Sriramulu"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"478255d2a8d3273125a56468028aa0e4","permalink":"/publication/fa-18-516-23-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-23-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Setup multipe PI SDs with cm-burn","type":"publication"},{"authors":["David Demeulenaere"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"a14f5b3fb1d7a910a6934acee65da4fe","permalink":"/publication/fa-18-516-04-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-04-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: TBD","type":"publication"},{"authors":["David Demeulenaere"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"cc75301e175f0e03e11b1b7e222161cd","permalink":"/publication/fa-18-516-04-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-04-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: TBD","type":"publication"},{"authors":["De'Angelo Rutledge"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"3a7f2bc1c4a3a660fd87e0159eb510ce","permalink":"/publication/fa-18-516-19-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-19-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: TBD","type":"publication"},{"authors":["Jay Stockwell"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"46f9fe816f21158ae4093b4dba79cd7c","permalink":"/publication/fa-18-523-61-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-61-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: TBD","type":"publication"},{"authors":["Pavan Kumar Madineni"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"46f6defc4e839868f12b8d127594c44c","permalink":"/publication/fa-18-523-82-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-523-82-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: Watson Analytics","type":"publication"},{"authors":["Yu Luo"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"7d3165e940599f50029cbbbead9a8e0b","permalink":"/publication/fa-18-516-12-project-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-12-project-0/","section":"publication","summary":"","tags":["Fall 2018","project"],"title":"Paper: cm4","type":"publication"},{"authors":["Yu Luo"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"179f8035645b9d2ab1ff736e72e8d277","permalink":"/publication/fa-18-516-12-paper-0/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/fa-18-516-12-paper-0/","section":"publication","summary":"","tags":["Fall 2018","paper"],"title":"Paper: working on the vm description for cm4","type":"publication"},{"authors":["Gregor von Laszewski"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"b7b933060966974cd051410dcb847499","permalink":"/publication/las-18-writing-1/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/las-18-writing-1/","section":"publication","summary":"","tags":["Writing","Book","ePub"],"title":"Scientific Writing I","type":"publication"},{"authors":["Gregor von Laszewski"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"5df8479838ae0eb41e3035b906039c77","permalink":"/publication/las-18-writing-2/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/las-18-writing-2/","section":"publication","summary":"","tags":["Writing","Book","ePub"],"title":"Scientific Writing II","type":"publication"},{"authors":["Gregor von Laszewski"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"c44576a6ecc41a722b9314ad1fe5db6a","permalink":"/publication/las-18-usecases-1/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/las-18-usecases-1/","section":"publication","summary":"","tags":["Big Data","Use cases","Book","ePub"],"title":"Use Cases in Big Data Software and Analytics","type":"publication"},{"authors":["Gregor von Laszewski"],"categories":null,"content":"","date":1541044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541044800,"objectID":"aec002c09944d7a7b009b9e320978e26","permalink":"/publication/las-18-usecases-2/","publishdate":"2018-11-01T00:00:00-04:00","relpermalink":"/publication/las-18-usecases-2/","section":"publication","summary":"","tags":["Big Data","Use cases","Book","ePub"],"title":"Use Cases in Big Data Software and Analytics","type":"publication"},{"authors":null,"categories":["lorem"],"content":" Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like\n▾ \u0026lt;root\u0026gt;/ ▾ images/ logo.png  should become\n▾ \u0026lt;root\u0026gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you\u0026rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.\nCreate your Hugo configuration file Hugo can read your configuration as JSON, YAML or TOML. Hugo supports parameters custom configuration too. Refer to the Hugo configuration documentation for details.\nSet your configuration publish folder to _site The default is for Jekyll to publish to _site and for Hugo to publish to public. If, like me, you have _site mapped to a git submodule on the gh-pages branch, you\u0026rsquo;ll want to do one of two alternatives:\n Change your submodule to point to map gh-pages to public instead of _site (recommended).\ngit submodule deinit _site git rm _site git submodule add -b gh-pages git@github.com:your-username/your-repo.git public  Or, change the Hugo configuration to use _site instead of public.\n{ .. \u0026quot;publishdir\u0026quot;: \u0026quot;_site\u0026quot;, .. }   Convert Jekyll templates to Hugo templates That\u0026rsquo;s the bulk of the work right here. The documentation is your friend. You should refer to Jekyll\u0026rsquo;s template documentation if you need to refresh your memory on how you built your blog and Hugo\u0026rsquo;s template to learn Hugo\u0026rsquo;s way.\nAs a single reference data point, converting my templates for heyitsalex.net took me no more than a few hours.\nConvert Jekyll plugins to Hugo shortcodes Jekyll has plugins; Hugo has shortcodes. It\u0026rsquo;s fairly trivial to do a port.\nImplementation As an example, I was using a custom image_tag plugin to generate figures with caption when running Jekyll. As I read about shortcodes, I found Hugo had a nice built-in shortcode that does exactly the same thing.\nJekyll\u0026rsquo;s plugin:\nmodule Jekyll class ImageTag \u0026lt; Liquid::Tag @url = nil @caption = nil @class = nil @link = nil // Patterns IMAGE_URL_WITH_CLASS_AND_CAPTION = IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))(\\s+)\u0026quot;(.*?)\u0026quot;(\\s+)-\u0026gt;((https?:\\/\\/|\\/)(\\S+))(\\s*)/i IMAGE_URL_WITH_CAPTION = /((https?:\\/\\/|\\/)(\\S+))(\\s+)\u0026quot;(.*?)\u0026quot;/i IMAGE_URL_WITH_CLASS = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))/i IMAGE_URL = /((https?:\\/\\/|\\/)(\\S+))/i def initialize(tag_name, markup, tokens) super if markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK @class = $1 @url = $3 @caption = $7 @link = $9 elsif markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION @class = $1 @url = $3 @caption = $7 elsif markup =~ IMAGE_URL_WITH_CAPTION @url = $1 @caption = $5 elsif markup =~ IMAGE_URL_WITH_CLASS @class = $1 @url = $3 elsif markup =~ IMAGE_URL @url = $1 end end def render(context) if @class source = \u0026quot;\u0026lt;figure class='#{@class}'\u0026gt;\u0026quot; else source = \u0026quot;\u0026lt;figure\u0026gt;\u0026quot; end if @link source += \u0026quot;\u0026lt;a href=\\\u0026quot;#{@link}\\\u0026quot;\u0026gt;\u0026quot; end source += \u0026quot;\u0026lt;img src=\\\u0026quot;#{@url}\\\u0026quot;\u0026gt;\u0026quot; if @link source += \u0026quot;\u0026lt;/a\u0026gt;\u0026quot; end source += \u0026quot;\u0026lt;figcaption\u0026gt;#{@caption}\u0026lt;/figcaption\u0026gt;\u0026quot; if @caption source += \u0026quot;\u0026lt;/figure\u0026gt;\u0026quot; source end end end Liquid::Template.register_tag('image', Jekyll::ImageTag)  is written as this Hugo shortcode:\n\u0026lt;!-- image --\u0026gt; \u0026lt;figure {{ with .Get \u0026quot;class\u0026quot; }}class=\u0026quot;{{.}}\u0026quot;{{ end }}\u0026gt; {{ with .Get \u0026quot;link\u0026quot;}}\u0026lt;a href=\u0026quot;{{.}}\u0026quot;\u0026gt;{{ end }} \u0026lt;img src=\u0026quot;{{ .Get \u0026quot;src\u0026quot; }}\u0026quot; {{ if or (.Get \u0026quot;alt\u0026quot;) (.Get \u0026quot;caption\u0026quot;) }}alt=\u0026quot;{{ with .Get \u0026quot;alt\u0026quot;}}{{.}}{{else}}{{ .Get \u0026quot;caption\u0026quot; }}{{ end }}\u0026quot;{{ end }} /\u0026gt; {{ if .Get \u0026quot;link\u0026quot;}}\u0026lt;/a\u0026gt;{{ end }} {{ if or (or (.Get \u0026quot;title\u0026quot;) (.Get \u0026quot;caption\u0026quot;)) (.Get \u0026quot;attr\u0026quot;)}} \u0026lt;figcaption\u0026gt;{{ if isset .Params \u0026quot;title\u0026quot; }} {{ .Get \u0026quot;title\u0026quot; }}{{ end }} {{ if or (.Get \u0026quot;caption\u0026quot;) (.Get \u0026quot;attr\u0026quot;)}}\u0026lt;p\u0026gt; {{ .Get \u0026quot;caption\u0026quot; }} {{ with .Get \u0026quot;attrlink\u0026quot;}}\u0026lt;a href=\u0026quot;{{.}}\u0026quot;\u0026gt; {{ end }} {{ .Get \u0026quot;attr\u0026quot; }} {{ if .Get \u0026quot;attrlink\u0026quot;}}\u0026lt;/a\u0026gt; {{ end }} \u0026lt;/p\u0026gt; {{ end }} \u0026lt;/figcaption\u0026gt; {{ end }} \u0026lt;/figure\u0026gt; \u0026lt;!-- image --\u0026gt;  Usage I simply changed:\n{% image full http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg \u0026quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were \u0026quot;having fun\u0026quot; and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\u0026quot; -\u0026gt;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/ %}  to this (this example uses a slightly extended version named fig, different than the built-in figure):\n{{% fig class=\u0026quot;full\u0026quot; src=\u0026quot;http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg\u0026quot; title=\u0026quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were having fun and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\u0026quot; link=\u0026quot;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/\u0026quot; %}}  As a bonus, the shortcode named parameters are, arguably, more readable.\nFinishing touches Fix content Depending on the amount of customization that was done with each post with Jekyll, this step will require more or less effort. There are no hard and fast rules here except that hugo server --watch is your friend. Test your changes and fix errors as needed.\nClean up You\u0026rsquo;ll want to remove the Jekyll configuration at this point. If you have anything else that isn\u0026rsquo;t used, delete it.\nA practical example in a diff Hey, it\u0026rsquo;s Alex was migrated in less than a father-with-kids day from Jekyll to Hugo. You can see all the changes (and screw-ups) by looking at this diff.\n","date":1444475251,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1444475251,"objectID":"91c85e6df8d3fe96672d71069889b993","permalink":"/blog/migrate-from-jekyll/","publishdate":"2015-10-10T13:07:31+02:00","relpermalink":"/blog/migrate-from-jekyll/","section":"blog","summary":"Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like\n▾ \u0026lt;root\u0026gt;/ ▾ images/ logo.png  should become\n▾ \u0026lt;root\u0026gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you\u0026rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.","tags":["ipsum"],"title":"Migrate from Jekyll","type":"blog"},{"authors":null,"categories":["programming"],"content":"I\u0026rsquo;m a linked post in the menu. You can add other posts by adding the following line to the frontmatter:\nmenu = \u0026quot;main\u0026quot;  Lorem ipsum dolor sit amet, consectetur adipiscing elit. In mauris nulla, vestibulum vel auctor sed, posuere eu lorem. Aliquam consequat augue ut accumsan mollis. Suspendisse malesuada sodales tincidunt. Vivamus sed erat ac augue bibendum porta sed id ipsum. Ut mollis mauris eget ligula sagittis cursus. Aliquam id pharetra tellus. Pellentesque sed tempus risus. Proin id hendrerit ante. Vestibulum vitae urna ut mauris ultricies dignissim. Ut ante turpis, tristique vitae sagittis quis, sagittis nec diam. Fusce pulvinar cursus porta. Vivamus maximus leo dolor, ut pellentesque lorem fringilla nec. Mauris faucibus turpis posuere sapien euismod, a ullamcorper mi maximus.\nMorbi varius ex vel justo dictum placerat. Sed ac arcu pretium, varius elit eget, gravida purus. Fusce sit amet massa mollis eros tincidunt sollicitudin. Suspendisse iaculis cursus mauris ut sagittis. Interdum et malesuada fames ac ante ipsum primis in faucibus. Maecenas elit ligula, molestie quis magna eu, semper posuere lorem. Mauris a justo pharetra, congue ex eget, tincidunt massa. Maecenas sit amet neque lorem.\nCurabitur at elementum quam. Curabitur tristique elit non sapien aliquam vulputate. Vivamus in odio tincidunt, tempor sem quis, tincidunt lacus. Mauris pulvinar nunc sed tempus dictum. Nam vel arcu quis mi fermentum ullamcorper non ac lacus. Donec aliquet vitae ante at imperdiet. Aenean scelerisque venenatis urna, eget elementum risus convallis ac. Nullam gravida arcu lacus, non consectetur augue pretium non. Duis dignissim eros id urna pretium congue. Nullam eu magna in sem sollicitudin tempor. Pellentesque vel convallis ligula. Quisque semper, turpis a rhoncus efficitur, magna nibh iaculis elit, eget tempor dolor eros ut mi. Maecenas eu placerat lacus. Praesent congue pretium nulla, sed suscipit metus rutrum vel.\n","date":1443815360,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1443815360,"objectID":"cf9ebc8da431328d17ec4338a928eea2","permalink":"/blog/linked-post/","publishdate":"2015-10-02T21:49:20+02:00","relpermalink":"/blog/linked-post/","section":"blog","summary":"I\u0026rsquo;m a linked post in the menu. You can add other posts by adding the following line to the frontmatter:\nmenu = \u0026quot;main\u0026quot;  Lorem ipsum dolor sit amet, consectetur adipiscing elit. In mauris nulla, vestibulum vel auctor sed, posuere eu lorem. Aliquam consequat augue ut accumsan mollis. Suspendisse malesuada sodales tincidunt. Vivamus sed erat ac augue bibendum porta sed id ipsum. Ut mollis mauris eget ligula sagittis cursus. Aliquam id pharetra tellus.","tags":["golang","programming","theme","hugo"],"title":"Linked post","type":"blog"},{"authors":null,"categories":["programming"],"content":" Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.\nThis document is a brief primer on using go templates. The go docs provide more details.\nIntroduction to Go Templates Go templates provide an extremely simple template language. It adheres to the belief that only the most basic of logic belongs in the template or view layer. One consequence of this simplicity is that go templates parse very quickly.\nA unique characteristic of go templates is they are content aware. Variables and content will be sanitized depending on the context of where they are used. More details can be found in the go docs.\nBasic Syntax Go lang templates are html files with the addition of variables and functions.\nGo variables and functions are accessible within {{ }}\nAccessing a predefined variable \u0026ldquo;foo\u0026rdquo;:\n{{ foo }}  Parameters are separated using spaces\nCalling the add function with input of 1, 2:\n{{ add 1 2 }}  Methods and fields are accessed via dot notation\nAccessing the Page Parameter \u0026ldquo;bar\u0026rdquo;\n{{ .Params.bar }}  Parentheses can be used to group items together\n{{ if or (isset .Params \u0026quot;alt\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;) }} Caption {{ end }}  Variables Each go template has a struct (object) made available to it. In hugo each template is passed either a page or a node struct depending on which type of page you are rendering. More details are available on the variables page.\nA variable is accessed by referencing the variable name.\n\u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt;  Variables can also be defined and referenced.\n{{ $address := \u0026quot;123 Main St.\u0026quot;}} {{ $address }}  Functions Go template ship with a few functions which provide basic functionality. The go template system also provides a mechanism for applications to extend the available functions with their own. Hugo template functions provide some additional functionality we believe are useful for building websites. Functions are called by using their name followed by the required parameters separated by spaces. Template functions cannot be added without recompiling hugo.\nExample:\n{{ add 1 2 }}  Includes When including another template you will pass to it the data it will be able to access. To pass along the current context please remember to include a trailing dot. The templates location will always be starting at the /layout/ directory within Hugo.\nExample:\n{{ template \u0026quot;chrome/header.html\u0026quot; . }}  Logic Go templates provide the most basic iteration and conditional logic.\nIteration Just like in go, the go templates make heavy use of range to iterate over a map, array or slice. The following are different examples of how to use range.\nExample 1: Using Context\n{{ range array }} {{ . }} {{ end }}  Example 2: Declaring value variable name\n{{range $element := array}} {{ $element }} {{ end }}  Example 2: Declaring key and value variable name\n{{range $index, $element := array}} {{ $index }} {{ $element }} {{ end }}  Conditionals If, else, with, or, \u0026amp; and provide the framework for handling conditional logic in Go Templates. Like range, each statement is closed with end.\nGo Templates treat the following values as false:\n false 0 any array, slice, map, or string of length zero  Example 1: If\n{{ if isset .Params \u0026quot;title\u0026quot; }}\u0026lt;h4\u0026gt;{{ index .Params \u0026quot;title\u0026quot; }}\u0026lt;/h4\u0026gt;{{ end }}  Example 2: If -\u0026gt; Else\n{{ if isset .Params \u0026quot;alt\u0026quot; }} {{ index .Params \u0026quot;alt\u0026quot; }} {{else}} {{ index .Params \u0026quot;caption\u0026quot; }} {{ end }}  Example 3: And \u0026amp; Or\n{{ if and (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}}  Example 4: With\nAn alternative way of writing \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent.\nThe first example above could be simplified as:\n{{ with .Params.title }}\u0026lt;h4\u0026gt;{{ . }}\u0026lt;/h4\u0026gt;{{ end }}  Example 5: If -\u0026gt; Else If\n{{ if isset .Params \u0026quot;alt\u0026quot; }} {{ index .Params \u0026quot;alt\u0026quot; }} {{ else if isset .Params \u0026quot;caption\u0026quot; }} {{ index .Params \u0026quot;caption\u0026quot; }} {{ end }}  Pipes One of the most powerful components of go templates is the ability to stack actions one after another. This is done by using pipes. Borrowed from unix pipes, the concept is simple, each pipeline\u0026rsquo;s output becomes the input of the following pipe.\nBecause of the very simple syntax of go templates, the pipe is essential to being able to chain together function calls. One limitation of the pipes is that they only can work with a single value and that value becomes the last parameter of the next pipeline.\nA few simple examples should help convey how to use the pipe.\nExample 1 :\n{{ if eq 1 1 }} Same {{ end }}  is the same as\n{{ eq 1 1 | if }} Same {{ end }}  It does look odd to place the if at the end, but it does provide a good illustration of how to use the pipes.\nExample 2 :\n{{ index .Params \u0026quot;disqus_url\u0026quot; | html }}  Access the page parameter called \u0026ldquo;disqus_url\u0026rdquo; and escape the HTML.\nExample 3 :\n{{ if or (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}} Stuff Here {{ end }}  Could be rewritten as\n{{ isset .Params \u0026quot;caption\u0026quot; | or isset .Params \u0026quot;title\u0026quot; | or isset .Params \u0026quot;attr\u0026quot; | if }} Stuff Here {{ end }}  Context (aka. the dot) The most easily overlooked concept to understand about go templates is that {{ . }} always refers to the current context. In the top level of your template this will be the data set made available to it. Inside of a iteration it will have the value of the current item. When inside of a loop the context has changed. . will no longer refer to the data available to the entire page. If you need to access this from within the loop you will likely want to set it to a variable instead of depending on the context.\nExample:\n {{ $title := .Site.Title }} {{ range .Params.tags }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026quot;{{ $baseurl }}/tags/{{ . | urlize | lower }}\u0026quot;\u0026gt;{{ . }}\u0026lt;/a\u0026gt; - {{ $title }} \u0026lt;/li\u0026gt; {{ end }}  Notice how once we have entered the loop the value of {{ . }} has changed. We have defined a variable outside of the loop so we have access to it from within the loop.\nHugo Parameters Hugo provides the option of passing values to the template language through the site configuration (for sitewide values), or through the meta data of each specific piece of content. You can define any values of any type (supported by your front matter/config format) and use them however you want to inside of your templates.\nUsing Content (page) Parameters In each piece of content you can provide variables to be used by the templates. This happens in the front matter.\nAn example of this is used in this documentation site. Most of the pages benefit from having the table of contents provided. Sometimes the TOC just doesn\u0026rsquo;t make a lot of sense. We\u0026rsquo;ve defined a variable in our front matter of some pages to turn off the TOC from being displayed.\nHere is the example front matter:\n--- title: \u0026quot;Permalinks\u0026quot; date: \u0026quot;2013-11-18\u0026quot; aliases: - \u0026quot;/doc/permalinks/\u0026quot; groups: [\u0026quot;extras\u0026quot;] groups_weight: 30 notoc: true ---  Here is the corresponding code inside of the template:\n {{ if not .Params.notoc }} \u0026lt;div id=\u0026quot;toc\u0026quot; class=\u0026quot;well col-md-4 col-sm-6\u0026quot;\u0026gt; {{ .TableOfContents }} \u0026lt;/div\u0026gt; {{ end }}  Using Site (config) Parameters In your top-level configuration file (eg, config.yaml) you can define site parameters, which are values which will be available to you in chrome.\nFor instance, you might declare:\nparams: CopyrightHTML: \u0026quot;Copyright \u0026amp;#xA9; 2013 John Doe. All Rights Reserved.\u0026quot; TwitterUser: \u0026quot;spf13\u0026quot; SidebarRecentLimit: 5  Within a footer layout, you might then declare a \u0026lt;footer\u0026gt; which is only provided if the CopyrightHTML parameter is provided, and if it is given, you would declare it to be HTML-safe, so that the HTML entity is not escaped again. This would let you easily update just your top-level config file each January 1st, instead of hunting through your templates.\n{{if .Site.Params.CopyrightHTML}}\u0026lt;footer\u0026gt; \u0026lt;div class=\u0026quot;text-center\u0026quot;\u0026gt;{{.Site.Params.CopyrightHTML | safeHtml}}\u0026lt;/div\u0026gt; \u0026lt;/footer\u0026gt;{{end}}  An alternative way of writing the \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent:\n{{with .Site.Params.TwitterUser}}\u0026lt;span class=\u0026quot;twitter\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;https://twitter.com/{{.}}\u0026quot; rel=\u0026quot;author\u0026quot;\u0026gt; \u0026lt;img src=\u0026quot;/images/twitter.png\u0026quot; width=\u0026quot;48\u0026quot; height=\u0026quot;48\u0026quot; title=\u0026quot;Twitter: {{.}}\u0026quot; alt=\u0026quot;Twitter\u0026quot;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/span\u0026gt;{{end}}  Finally, if you want to pull \u0026ldquo;magic constants\u0026rdquo; out of your layouts, you can do so, such as in this example:\n\u0026lt;nav class=\u0026quot;recent\u0026quot;\u0026gt; \u0026lt;h1\u0026gt;Recent Posts\u0026lt;/h1\u0026gt; \u0026lt;ul\u0026gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}} \u0026lt;li\u0026gt;\u0026lt;a href=\u0026quot;{{.RelPermalink}}\u0026quot;\u0026gt;{{.Title}}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; {{end}}\u0026lt;/ul\u0026gt; \u0026lt;/nav\u0026gt;  ","date":1442490428,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1442490428,"objectID":"53bec5baf8916b59e6c044a455b353e4","permalink":"/blog/go-is-for-lovers/","publishdate":"2015-09-17T13:47:08+02:00","relpermalink":"/blog/go-is-for-lovers/","section":"blog","summary":"Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.\nThis document is a brief primer on using go templates.","tags":["go"],"title":"Go is for lovers","type":"blog"},{"authors":null,"categories":["pseudo"],"content":" Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.\nSave it somewhere specific as we will be using it in the next step.\nMore complete instructions are available at installing hugo\nStep 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.\nFollow the following steps:\n Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:\ngit clone https://github.com/spf13/hugo cd hugo /path/to/where/you/installed/hugo server --source=./docs \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 27 ms \u0026gt; Web Server is available at http://localhost:1313 \u0026gt; Press ctrl+c to stop  Once you\u0026rsquo;ve gotten here, follow along the rest of this page on your local build.\nStep 3. Change the docs site Stop the Hugo process by hitting ctrl+c.\nNow we are going to run hugo again, but this time with hugo in watch mode.\n/path/to/hugo/from/step/1/hugo server --source=./docs --watch \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 27 ms \u0026gt; Web Server is available at http://localhost:1313 \u0026gt; Watching for changes in /Users/spf13/Code/hugo/docs/content \u0026gt; Press ctrl+c to stop  Open your favorite editor and change one of the source content pages. How about changing this very file to fix the typo. How about changing this very file to fix the typo.\nContent files are found in docs/content/. Unless otherwise specified, files are located at the same relative location as the url, in our case docs/content/overview/quickstart.md.\nChange and save this file.. Notice what happened in your terminal.\n\u0026gt; Change detected, rebuilding site \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 26 ms  Refresh the browser and observe that the typo is now fixed.\nNotice how quick that was. Try to refresh the site before it\u0026rsquo;s finished building.. I double dare you. Having nearly instant feedback enables you to have your creativity flow without waiting for long builds.\nStep 4. Have fun The best way to learn something is to play with it.\n","date":1438601986,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1438601986,"objectID":"06b1ea061b413ee3b368dc80877fddd2","permalink":"/blog/hugo-is-for-lovers/","publishdate":"2015-08-03T13:39:46+02:00","relpermalink":"/blog/hugo-is-for-lovers/","section":"blog","summary":"Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.\nSave it somewhere specific as we will be using it in the next step.\nMore complete instructions are available at installing hugo\nStep 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.\nFollow the following steps:\n Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:","tags":["hugo"],"title":"Hugo is for lovers","type":"blog"},{"authors":null,"categories":["starting"],"content":" Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nWe\u0026rsquo;ll start with creating a new site with a very basic template. Then we\u0026rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.\nIn this tutorial, commands that you enter will start with the \u0026ldquo;$\u0026rdquo; prompt. The output will follow. Lines that start with \u0026ldquo;#\u0026rdquo; are comments that I\u0026rsquo;ve added to explain a point. When I show updates to a file, the \u0026ldquo;:wq\u0026rdquo; on the last line means to save the file.\nHere\u0026rsquo;s an example:\n## this is a comment $ echo this is a command this is a command ## edit the file $vi foo.md +++ date = \u0026quot;2014-09-28\u0026quot; title = \u0026quot;creating a new theme\u0026quot; +++ bah and humbug :wq ## show it $ cat foo.md +++ date = \u0026quot;2014-09-28\u0026quot; title = \u0026quot;creating a new theme\u0026quot; +++ bah and humbug $  Some Definitions There are a few concepts that you need to understand before creating a theme.\nSkins Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.\nYou have two ways to create a skin. The simplest way is to create it in the layouts/ directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the layouts/ directory so it will always find the skin.\nYour second choice is to create it in a sub-directory of the themes/ directory. If you do, then you must always tell Hugo where to search for the skin. It’s extra work, though, so why bother with it?\nThe difference between creating a skin in layouts/ and creating it in themes/ is very subtle. A skin in layouts/ can’t be customized without updating the templates and static files that it is built from. A skin created in themes/, on the other hand, can be and that makes it easier for other people to use it.\nThe rest of this tutorial will call a skin created in the themes/ directory a theme.\nNote that you can use this tutorial to create a skin in the layouts/ directory if you wish to. The main difference will be that you won’t need to update the site’s configuration file to use a theme.\nThe Home Page The home page, or landing page, is the first page that many visitors to a site see. It is the index.html file in the root directory of the web site. Since Hugo writes files to the public/ directory, our home page is public/index.html.\nSite Configuration File When Hugo runs, it looks for a configuration file that contains settings that override default values for the entire site. The file can use TOML, YAML, or JSON. I prefer to use TOML for my configuration files. If you prefer to use JSON or YAML, you’ll need to translate my examples. You’ll also need to change the name of the file since Hugo uses the extension to determine how to process it.\nHugo translates Markdown files into HTML. By default, Hugo expects to find Markdown files in your content/ directory and template files in your themes/ directory. It will create HTML files in your public/ directory. You can change this by specifying alternate locations in the configuration file.\nContent Content is stored in text files that contain two sections. The first section is the “front matter,” which is the meta-information on the content. The second section contains Markdown that will be converted to HTML.\nFront Matter The front matter is information about the content. Like the configuration file, it can be written in TOML, YAML, or JSON. Unlike the configuration file, Hugo doesn’t use the file’s extension to know the format. It looks for markers to signal the type. TOML is surrounded by “+++”, YAML by “---”, and JSON is enclosed in curly braces. I prefer to use TOML, so you’ll need to translate my examples if you prefer YAML or JSON.\nThe information in the front matter is passed into the template before the content is rendered into HTML.\nMarkdown Content is written in Markdown which makes it easier to create the content. Hugo runs the content through a Markdown engine to create the HTML which will be written to the output file.\nTemplate Files Hugo uses template files to render content into HTML. Template files are a bridge between the content and presentation. Rules in the template define what content is published, where it\u0026rsquo;s published to, and how it will rendered to the HTML file. The template guides the presentation by specifying the style to use.\nThere are three types of templates: single, list, and partial. Each type takes a bit of content as input and transforms it based on the commands in the template.\nHugo uses its knowledge of the content to find the template file used to render the content. If it can’t find a template that is an exact match for the content, it will shift up a level and search from there. It will continue to do so until it finds a matching template or runs out of templates to try. If it can’t find a template, it will use the default template for the site.\nPlease note that you can use the front matter to influence Hugo’s choice of templates.\nSingle Template A single template is used to render a single piece of content. For example, an article or post would be a single piece of content and use a single template.\nList Template A list template renders a group of related content. That could be a summary of recent postings or all articles in a category. List templates can contain multiple groups.\nThe homepage template is a special type of list template. Hugo assumes that the home page of your site will act as the portal for the rest of the content in the site.\nPartial Template A partial template is a template that can be included in other templates. Partial templates must be called using the “partial” template command. They are very handy for rolling up common behavior. For example, your site may have a banner that all pages use. Instead of copying the text of the banner into every single and list template, you could create a partial with the banner in it. That way if you decide to change the banner, you only have to change the partial template.\nCreate a New Site Let\u0026rsquo;s use Hugo to create a new web site. I\u0026rsquo;m a Mac user, so I\u0026rsquo;ll create mine in my home directory, in the Sites folder. If you\u0026rsquo;re using Linux, you might have to create the folder first.\nThe \u0026ldquo;new site\u0026rdquo; command will create a skeleton of a site. It will give you the basic directory structure and a useable configuration file.\n$ hugo new site ~/Sites/zafta $ cd ~/Sites/zafta $ ls -l total 8 drwxr-xr-x 7 quoha staff 238 Sep 29 16:49 . drwxr-xr-x 3 quoha staff 102 Sep 29 16:49 .. drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes -rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static $  Take a look in the content/ directory to confirm that it is empty.\nThe other directories (archetypes/, layouts/, and static/) are used when customizing a theme. That\u0026rsquo;s a topic for a different tutorial, so please ignore them for now.\nGenerate the HTML For the New Site Running the hugo command with no options will read all the available content and generate the HTML files. It will also copy all static files (that\u0026rsquo;s everything that\u0026rsquo;s not content). Since we have an empty site, it won\u0026rsquo;t do much, but it will do it very quickly.\n$ hugo --verbose INFO: 2014/09/29 Using config file: config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] WARN: 2014/09/29 Unable to locate layout: [404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms $  The \u0026ldquo;--verbose\u0026rdquo; flag gives extra information that will be helpful when we build the template. Every line of the output that starts with \u0026ldquo;INFO:\u0026rdquo; or \u0026ldquo;WARN:\u0026rdquo; is present because we used that flag. The lines that start with \u0026ldquo;WARN:\u0026rdquo; are warning messages. We\u0026rsquo;ll go over them later.\nWe can verify that the command worked by looking at the directory again.\n$ ls -l total 8 drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes -rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts drwxr-xr-x 4 quoha staff 136 Sep 29 17:02 public drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static $  See that new public/ directory? Hugo placed all generated content there. When you\u0026rsquo;re ready to publish your web site, that\u0026rsquo;s the place to start. For now, though, let\u0026rsquo;s just confirm that we have what we\u0026rsquo;d expect from a site with no content.\n$ ls -l public total 16 -rw-r--r-- 1 quoha staff 416 Sep 29 17:02 index.xml -rw-r--r-- 1 quoha staff 262 Sep 29 17:02 sitemap.xml $  Hugo created two XML files, which is standard, but there are no HTML files.\nTest the New Site Verify that you can run the built-in web server. It will dramatically shorten your development cycle if you do. Start it by running the \u0026ldquo;server\u0026rdquo; command. If it is successful, you will see output similar to the following:\n$ hugo server --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] WARN: 2014/09/29 Unable to locate layout: [404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms Serving pages from /Users/quoha/Sites/zafta/public Web Server is available at http://localhost:1313 Press Ctrl+C to stop  Connect to the listed URL (it\u0026rsquo;s on the line that starts with \u0026ldquo;Web Server\u0026rdquo;). If everything is working correctly, you should get a page that shows the following:\nindex.xml sitemap.xml  That\u0026rsquo;s a listing of your public/ directory. Hugo didn\u0026rsquo;t create a home page because our site has no content. When there\u0026rsquo;s no index.html file in a directory, the server lists the files in the directory, which is what you should see in your browser.\nLet’s go back and look at those warnings again.\nWARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] WARN: 2014/09/29 Unable to locate layout: [404.html]  That second warning is easier to explain. We haven’t created a template to be used to generate “page not found errors.” The 404 message is a topic for a separate tutorial.\nNow for the first warning. It is for the home page. You can tell because the first layout that it looked for was “index.html.” That’s only used by the home page.\nI like that the verbose flag causes Hugo to list the files that it\u0026rsquo;s searching for. For the home page, they are index.html, _default/list.html, and _default/single.html. There are some rules that we\u0026rsquo;ll cover later that explain the names and paths. For now, just remember that Hugo couldn\u0026rsquo;t find a template for the home page and it told you so.\nAt this point, you\u0026rsquo;ve got a working installation and site that we can build upon. All that’s left is to add some content and a theme to display it.\nCreate a New Theme Hugo doesn\u0026rsquo;t ship with a default theme. There are a few available (I counted a dozen when I first installed Hugo) and Hugo comes with a command to create new themes.\nWe\u0026rsquo;re going to create a new theme called \u0026ldquo;zafta.\u0026rdquo; Since the goal of this tutorial is to show you how to fill out the files to pull in your content, the theme will not contain any CSS. In other words, ugly but functional.\nAll themes have opinions on content and layout. For example, Zafta uses \u0026ldquo;post\u0026rdquo; over \u0026ldquo;blog\u0026rdquo;. Strong opinions make for simpler templates but differing opinions make it tougher to use themes. When you build a theme, consider using the terms that other themes do.\nCreate a Skeleton Use the hugo \u0026ldquo;new\u0026rdquo; command to create the skeleton of a theme. This creates the directory structure and places empty files for you to fill out.\n$ hugo new theme zafta $ ls -l total 8 drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes -rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts drwxr-xr-x 4 quoha staff 136 Sep 29 17:02 public drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static drwxr-xr-x 3 quoha staff 102 Sep 29 17:31 themes $ find themes -type f | xargs ls -l -rw-r--r-- 1 quoha staff 1081 Sep 29 17:31 themes/zafta/LICENSE.md -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/archetypes/default.md -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/single.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/header.html -rw-r--r-- 1 quoha staff 93 Sep 29 17:31 themes/zafta/theme.toml $  The skeleton includes templates (the files ending in .html), license file, a description of your theme (the theme.toml file), and an empty archetype.\nPlease take a minute to fill out the theme.toml and LICENSE.md files. They\u0026rsquo;re optional, but if you\u0026rsquo;re going to be distributing your theme, it tells the world who to praise (or blame). It\u0026rsquo;s also nice to declare the license so that people will know how they can use the theme.\n$ vi themes/zafta/theme.toml author = \u0026quot;michael d henderson\u0026quot; description = \u0026quot;a minimal working template\u0026quot; license = \u0026quot;MIT\u0026quot; name = \u0026quot;zafta\u0026quot; source_repo = \u0026quot;\u0026quot; tags = [\u0026quot;tags\u0026quot;, \u0026quot;categories\u0026quot;] :wq ## also edit themes/zafta/LICENSE.md and change ## the bit that says \u0026quot;YOUR_NAME_HERE\u0026quot;  Note that the the skeleton\u0026rsquo;s template files are empty. Don\u0026rsquo;t worry, we\u0026rsquo;ll be changing that shortly.\n$ find themes/zafta -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/single.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/header.html $  Update the Configuration File to Use the Theme Now that we\u0026rsquo;ve got a theme to work with, it\u0026rsquo;s a good idea to add the theme name to the configuration file. This is optional, because you can always add \u0026ldquo;-t zafta\u0026rdquo; on all your commands. I like to put it the configuration file because I like shorter command lines. If you don\u0026rsquo;t put it in the configuration file or specify it on the command line, you won\u0026rsquo;t use the template that you\u0026rsquo;re expecting to.\nEdit the file to add the theme, add a title for the site, and specify that all of our content will use the TOML format.\n$ vi config.toml theme = \u0026quot;zafta\u0026quot; baseurl = \u0026quot;\u0026quot; languageCode = \u0026quot;en-us\u0026quot; title = \u0026quot;zafta - totally refreshing\u0026quot; MetaDataFormat = \u0026quot;toml\u0026quot; :wq $  Generate the Site Now that we have an empty theme, let\u0026rsquo;s generate the site again.\n$ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms $  Did you notice that the output is different? The warning message for the home page has disappeared and we have an additional information line saying that Hugo is syncing from the theme\u0026rsquo;s directory.\nLet\u0026rsquo;s check the public/ directory to see what Hugo\u0026rsquo;s created.\n$ ls -l public total 16 drwxr-xr-x 2 quoha staff 68 Sep 29 17:56 css -rw-r--r-- 1 quoha staff 0 Sep 29 17:56 index.html -rw-r--r-- 1 quoha staff 407 Sep 29 17:56 index.xml drwxr-xr-x 2 quoha staff 68 Sep 29 17:56 js -rw-r--r-- 1 quoha staff 243 Sep 29 17:56 sitemap.xml $  Notice four things:\n Hugo created a home page. This is the file public/index.html. Hugo created a css/ directory. Hugo created a js/ directory. Hugo claimed that it created 0 pages. It created a file and copied over static files, but didn\u0026rsquo;t create any pages. That\u0026rsquo;s because it considers a \u0026ldquo;page\u0026rdquo; to be a file created directly from a content file. It doesn\u0026rsquo;t count things like the index.html files that it creates automatically.  The Home Page Hugo supports many different types of templates. The home page is special because it gets its own type of template and its own template file. The file, layouts/index.html, is used to generate the HTML for the home page. The Hugo documentation says that this is the only required template, but that depends. Hugo\u0026rsquo;s warning message shows that it looks for three different templates:\nWARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]  If it can\u0026rsquo;t find any of these, it completely skips creating the home page. We noticed that when we built the site without having a theme installed.\nWhen Hugo created our theme, it created an empty home page template. Now, when we build the site, Hugo finds the template and uses it to generate the HTML for the home page. Since the template file is empty, the HTML file is empty, too. If the template had any rules in it, then Hugo would have used them to generate the home page.\n$ find . -name index.html | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 20:21 ./public/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 ./themes/zafta/layouts/index.html $  The Magic of Static Hugo does two things when generating the site. It uses templates to transform content into HTML and it copies static files into the site. Unlike content, static files are not transformed. They are copied exactly as they are.\nHugo assumes that your site will use both CSS and JavaScript, so it creates directories in your theme to hold them. Remember opinions? Well, Hugo\u0026rsquo;s opinion is that you\u0026rsquo;ll store your CSS in a directory named css/ and your JavaScript in a directory named js/. If you don\u0026rsquo;t like that, you can change the directory names in your theme directory or even delete them completely. Hugo\u0026rsquo;s nice enough to offer its opinion, then behave nicely if you disagree.\n$ find themes/zafta -type d | xargs ls -ld drwxr-xr-x 7 quoha staff 238 Sep 29 17:38 themes/zafta drwxr-xr-x 3 quoha staff 102 Sep 29 17:31 themes/zafta/archetypes drwxr-xr-x 5 quoha staff 170 Sep 29 17:31 themes/zafta/layouts drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/layouts/_default drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/layouts/partials drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/static drwxr-xr-x 2 quoha staff 68 Sep 29 17:31 themes/zafta/static/css drwxr-xr-x 2 quoha staff 68 Sep 29 17:31 themes/zafta/static/js $  The Theme Development Cycle When you\u0026rsquo;re working on a theme, you will make changes in the theme\u0026rsquo;s directory, rebuild the site, and check your changes in the browser. Hugo makes this very easy:\n Purge the public/ directory. Run the built in web server in watch mode. Open your site in a browser. Update the theme. Glance at your browser window to see changes. Return to step 4.  I’ll throw in one more opinion: never work on a theme on a live site. Always work on a copy of your site. Make changes to your theme, test them, then copy them up to your site. For added safety, use a tool like Git to keep a revision history of your content and your theme. Believe me when I say that it is too easy to lose both your mind and your changes.\nCheck the main Hugo site for information on using Git with Hugo.\nPurge the public/ Directory When generating the site, Hugo will create new files and update existing ones in the public/ directory. It will not delete files that are no longer used. For example, files that were created in the wrong directory or with the wrong title will remain. If you leave them, you might get confused by them later. I recommend cleaning out your site prior to generating it.\nNote: If you\u0026rsquo;re building on an SSD, you should ignore this. Churning on a SSD can be costly.\nHugo\u0026rsquo;s Watch Option Hugo\u0026rsquo;s \u0026ldquo;--watch\u0026rdquo; option will monitor the content/ and your theme directories for changes and rebuild the site automatically.\nLive Reload Hugo\u0026rsquo;s built in web server supports live reload. As pages are saved on the server, the browser is told to refresh the page. Usually, this happens faster than you can say, \u0026ldquo;Wow, that\u0026rsquo;s totally amazing.\u0026rdquo;\nDevelopment Commands Use the following commands as the basis for your workflow.\n## purge old files. hugo will recreate the public directory. ## $ rm -rf public ## ## run hugo in watch mode ## $ hugo server --watch --verbose  Here\u0026rsquo;s sample output showing Hugo detecting a change to the template for the home page. Once generated, the web browser automatically reloaded the page. I\u0026rsquo;ve said this before, it\u0026rsquo;s amazing.\n$ rm -rf public $ hugo server --watch --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms Watching for changes in /Users/quoha/Sites/zafta/content Serving pages from /Users/quoha/Sites/zafta/public Web Server is available at http://localhost:1313 Press Ctrl+C to stop INFO: 2014/09/29 File System Event: [\u0026quot;/Users/quoha/Sites/zafta/themes/zafta/layouts/index.html\u0026quot;: MODIFY|ATTRIB] Change detected, rebuilding site WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 1 ms  Update the Home Page Template The home page is one of a few special pages that Hugo creates automatically. As mentioned earlier, it looks for one of three files in the theme\u0026rsquo;s layout/ directory:\n index.html _default/list.html _default/single.html  We could update one of the default templates, but a good design decision is to update the most specific template available. That\u0026rsquo;s not a hard and fast rule (in fact, we\u0026rsquo;ll break it a few times in this tutorial), but it is a good generalization.\nMake a Static Home Page Right now, that page is empty because we don\u0026rsquo;t have any content and we don\u0026rsquo;t have any logic in the template. Let\u0026rsquo;s change that by adding some text to the template.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq $  Build the web site and then verify the results.\n$ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms $ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 78 Sep 29 21:26 public/index.html $ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;/html\u0026gt;  Live Reload Note: If you\u0026rsquo;re running the server with the --watch option, you\u0026rsquo;ll see different content in the file:\n$ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;script\u0026gt;document.write('\u0026lt;script src=\u0026quot;http://' + (location.host || 'localhost').split(':')[0] + ':1313/livereload.js?mindelay=10\u0026quot;\u0026gt;\u0026lt;/' + 'script\u0026gt;')\u0026lt;/script\u0026gt;\u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  When you use --watch, the Live Reload script is added by Hugo. Look for live reload in the documentation to see what it does and how to disable it.\nBuild a \u0026ldquo;Dynamic\u0026rdquo; Home Page \u0026ldquo;Dynamic home page?\u0026rdquo; Hugo\u0026rsquo;s a static web site generator, so this seems an odd thing to say. I mean let\u0026rsquo;s have the home page automatically reflect the content in the site every time Hugo builds it. We\u0026rsquo;ll use iteration in the template to do that.\nCreate New Posts Now that we have the home page generating static content, let\u0026rsquo;s add some content to the site. We\u0026rsquo;ll display these posts as a list on the home page and on their own page, too.\nHugo has a command to generate a skeleton post, just like it does for sites and themes.\n$ hugo --verbose new post/first.md INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 attempting to create post/first.md of post INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/default.md ERROR: 2014/09/29 Unable to Cast \u0026lt;nil\u0026gt; to map[string]interface{} $  That wasn\u0026rsquo;t very nice, was it?\nThe \u0026ldquo;new\u0026rdquo; command uses an archetype to create the post file. Hugo created an empty default archetype file, but that causes an error when there\u0026rsquo;s a theme. For me, the workaround was to create an archetypes file specifically for the post type.\n$ vi themes/zafta/archetypes/post.md +++ Description = \u0026quot;\u0026quot; Tags = [] Categories = [] +++ :wq $ find themes/zafta/archetypes -type f | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 21:53 themes/zafta/archetypes/default.md -rw-r--r-- 1 quoha staff 51 Sep 29 21:54 themes/zafta/archetypes/post.md $ hugo --verbose new post/first.md INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 attempting to create post/first.md of post INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/first.md /Users/quoha/Sites/zafta/content/post/first.md created $ hugo --verbose new post/second.md INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 attempting to create post/second.md of post INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/second.md /Users/quoha/Sites/zafta/content/post/second.md created $ ls -l content/post total 16 -rw-r--r-- 1 quoha staff 104 Sep 29 21:54 first.md -rw-r--r-- 1 quoha staff 105 Sep 29 21:57 second.md $ cat content/post/first.md +++ Categories = [] Description = \u0026quot;\u0026quot; Tags = [] date = \u0026quot;2014-09-29T21:54:53-05:00\u0026quot; title = \u0026quot;first\u0026quot; +++ my first post $ cat content/post/second.md +++ Categories = [] Description = \u0026quot;\u0026quot; Tags = [] date = \u0026quot;2014-09-29T21:57:09-05:00\u0026quot; title = \u0026quot;second\u0026quot; +++ my second post $  Build the web site and then verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026quot;category\u0026quot;:\u0026quot;categories\u0026quot;, \u0026quot;tag\u0026quot;:\u0026quot;tags\u0026quot;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $  The output says that it created 2 pages. Those are our new posts:\n$ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 78 Sep 29 22:13 public/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/second/index.html $  The new files are empty because because the templates used to generate the content are empty. The homepage doesn\u0026rsquo;t show the new content, either. We have to update the templates to add the posts.\nList and Single Templates In Hugo, we have three major kinds of templates. There\u0026rsquo;s the home page template that we updated previously. It is used only by the home page. We also have \u0026ldquo;single\u0026rdquo; templates which are used to generate output for a single content file. We also have \u0026ldquo;list\u0026rdquo; templates that are used to group multiple pieces of content before generating output.\nGenerally speaking, list templates are named \u0026ldquo;list.html\u0026rdquo; and single templates are named \u0026ldquo;single.html.\u0026rdquo;\nThere are three other types of templates: partials, content views, and terms. We will not go into much detail on these.\nAdd Content to the Homepage The home page will contain a list of posts. Let\u0026rsquo;s update its template to add the posts that we just created. The logic in the template will run every time we build the site.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; {{ range first 10 .Data.Pages }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ end }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq $  Hugo uses the Go template engine. That engine scans the template files for commands which are enclosed between \u0026ldquo;{{\u0026rdquo; and \u0026ldquo;}}\u0026rdquo;. In our template, the commands are:\n range .Title end  The \u0026ldquo;range\u0026rdquo; command is an iterator. We\u0026rsquo;re going to use it to go through the first ten pages. Every HTML file that Hugo creates is treated as a page, so looping through the list of pages will look at every file that will be created.\nThe \u0026ldquo;.Title\u0026rdquo; command prints the value of the \u0026ldquo;title\u0026rdquo; variable. Hugo pulls it from the front matter in the Markdown file.\nThe \u0026ldquo;end\u0026rdquo; command signals the end of the range iterator. The engine loops back to the top of the iteration when it finds \u0026ldquo;end.\u0026rdquo; Everything between the \u0026ldquo;range\u0026rdquo; and \u0026ldquo;end\u0026rdquo; is evaluated every time the engine goes through the iteration. In this file, that would cause the title from the first ten pages to be output as heading level one.\nIt\u0026rsquo;s helpful to remember that some variables, like .Data, are created before any output files. Hugo loads every content file into the variable and then gives the template a chance to process before creating the HTML files.\nBuild the web site and then verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026quot;tag\u0026quot;:\u0026quot;tags\u0026quot;, \u0026quot;category\u0026quot;:\u0026quot;categories\u0026quot;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 94 Sep 29 22:23 public/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/second/index.html $ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;second\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;first\u0026lt;/h1\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $  Congratulations, the home page shows the title of the two posts. The posts themselves are still empty, but let\u0026rsquo;s take a moment to appreciate what we\u0026rsquo;ve done. Your template now generates output dynamically. Believe it or not, by inserting the range command inside of those curly braces, you\u0026rsquo;ve learned everything you need to know to build a theme. All that\u0026rsquo;s really left is understanding which template will be used to generate each content file and becoming familiar with the commands for the template engine.\nAnd, if that were entirely true, this tutorial would be much shorter. There are a few things to know that will make creating a new template much easier. Don\u0026rsquo;t worry, though, that\u0026rsquo;s all to come.\nAdd Content to the Posts We\u0026rsquo;re working with posts, which are in the content/post/ directory. That means that their section is \u0026ldquo;post\u0026rdquo; (and if we don\u0026rsquo;t do something weird, their type is also \u0026ldquo;post\u0026rdquo;).\nHugo uses the section and type to find the template file for every piece of content. Hugo will first look for a template file that matches the section or type name. If it can\u0026rsquo;t find one, then it will look in the _default/ directory. There are some twists that we\u0026rsquo;ll cover when we get to categories and tags, but for now we can assume that Hugo will try post/single.html, then _default/single.html.\nNow that we know the search rule, let\u0026rsquo;s see what we actually have available:\n$ find themes/zafta -name single.html | xargs ls -l -rw-r--r-- 1 quoha staff 132 Sep 29 17:31 themes/zafta/layouts/_default/single.html  We could create a new template, post/single.html, or change the default. Since we don\u0026rsquo;t know of any other content types, let\u0026rsquo;s start with updating the default.\nRemember, any content that we haven\u0026rsquo;t created a template for will end up using this template. That can be good or bad. Bad because I know that we\u0026rsquo;re going to be adding different types of content and we\u0026rsquo;re going to end up undoing some of the changes we\u0026rsquo;ve made. It\u0026rsquo;s good because we\u0026rsquo;ll be able to see immediate results. It\u0026rsquo;s also good to start here because we can start to build the basic layout for the site. As we add more content types, we\u0026rsquo;ll refactor this file and move logic around. Hugo makes that fairly painless, so we\u0026rsquo;ll accept the cost and proceed.\nPlease see the Hugo documentation on template rendering for all the details on determining which template to use. And, as the docs mention, if you\u0026rsquo;re building a single page application (SPA) web site, you can delete all of the other templates and work with just the default single page. That\u0026rsquo;s a refreshing amount of joy right there.\nUpdate the Template File $ vi themes/zafta/layouts/_default/single.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq $  Build the web site and verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026quot;tag\u0026quot;:\u0026quot;tags\u0026quot;, \u0026quot;category\u0026quot;:\u0026quot;categories\u0026quot;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 94 Sep 29 22:40 public/index.html -rw-r--r-- 1 quoha staff 125 Sep 29 22:40 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:40 public/post/index.html -rw-r--r-- 1 quoha staff 128 Sep 29 22:40 public/post/second/index.html $ cat public/post/first/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;first\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;first\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;my first post\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ cat public/post/second/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;second\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;second\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;my second post\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $  Notice that the posts now have content. You can go to localhost:1313/post/first to verify.\nLinking to Content The posts are on the home page. Let\u0026rsquo;s add a link from there to the post. Since this is the home page, we\u0026rsquo;ll update its template.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; {{ range first 10 .Data.Pages }} \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; {{ end }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Build the web site and verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026quot;tag\u0026quot;:\u0026quot;tags\u0026quot;, \u0026quot;category\u0026quot;:\u0026quot;categories\u0026quot;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ find public -type f -name '*.html' | xargs ls -l -rw-r--r-- 1 quoha staff 149 Sep 29 22:44 public/index.html -rw-r--r-- 1 quoha staff 125 Sep 29 22:44 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:44 public/post/index.html -rw-r--r-- 1 quoha staff 128 Sep 29 22:44 public/post/second/index.html $ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;/post/second/\u0026quot;\u0026gt;second\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;/post/first/\u0026quot;\u0026gt;first\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $  Create a Post Listing We have the posts displaying on the home page and on their own page. We also have a file public/post/index.html that is empty. Let\u0026rsquo;s make it show a list of all posts (not just the first ten).\nWe need to decide which template to update. This will be a listing, so it should be a list template. Let\u0026rsquo;s take a quick look and see which list templates are available.\n$ find themes/zafta -name list.html | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html  As with the single post, we have to decide to update _default/list.html or create post/list.html. We still don\u0026rsquo;t have multiple content types, so let\u0026rsquo;s stay consistent and update the default list template.\nCreating Top Level Pages Let\u0026rsquo;s add an \u0026ldquo;about\u0026rdquo; page and display it at the top level (as opposed to a sub-level like we did with posts).\nThe default in Hugo is to use the directory structure of the content/ directory to guide the location of the generated html in the public/ directory. Let\u0026rsquo;s verify that by creating an \u0026ldquo;about\u0026rdquo; page at the top level:\n$ vi content/about.md +++ title = \u0026quot;about\u0026quot; description = \u0026quot;about this site\u0026quot; date = \u0026quot;2014-09-27\u0026quot; slug = \u0026quot;about time\u0026quot; +++ ## about us i'm speechless :wq  Generate the web site and verify the results.\n$ find public -name '*.html' | xargs ls -l -rw-rw-r-- 1 mdhender staff 334 Sep 27 15:08 public/about-time/index.html -rw-rw-r-- 1 mdhender staff 527 Sep 27 15:08 public/index.html -rw-rw-r-- 1 mdhender staff 358 Sep 27 15:08 public/post/first-post/index.html -rw-rw-r-- 1 mdhender staff 0 Sep 27 15:08 public/post/index.html -rw-rw-r-- 1 mdhender staff 342 Sep 27 15:08 public/post/second-post/index.html  Notice that the page wasn\u0026rsquo;t created at the top level. It was created in a sub-directory named \u0026lsquo;about-time/\u0026rsquo;. That name came from our slug. Hugo will use the slug to name the generated content. It\u0026rsquo;s a reasonable default, by the way, but we can learn a few things by fighting it for this file.\nOne other thing. Take a look at the home page.\n$ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;http://localhost:1313/post/theme/\u0026quot;\u0026gt;creating a new theme\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;http://localhost:1313/about-time/\u0026quot;\u0026gt;about\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;http://localhost:1313/post/second-post/\u0026quot;\u0026gt;second\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026quot;http://localhost:1313/post/first-post/\u0026quot;\u0026gt;first\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;script\u0026gt;document.write('\u0026lt;script src=\u0026quot;http://' + (location.host || 'localhost').split(':')[0] + ':1313/livereload.js?mindelay=10\u0026quot;\u0026gt;\u0026lt;/' + 'script\u0026gt;')\u0026lt;/script\u0026gt;\u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Notice that the \u0026ldquo;about\u0026rdquo; link is listed with the posts? That\u0026rsquo;s not desirable, so let\u0026rsquo;s change that first.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;posts\u0026lt;/h1\u0026gt; {{ range first 10 .Data.Pages }} {{ if eq .Type \u0026quot;post\u0026quot;}} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} \u0026lt;h1\u0026gt;pages\u0026lt;/h1\u0026gt; {{ range .Data.Pages }} {{ if eq .Type \u0026quot;page\u0026quot; }} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq  Generate the web site and verify the results. The home page has two sections, posts and pages, and each section has the right set of headings and links in it.\nBut, that about page still renders to about-time/index.html.\n$ find public -name '*.html' | xargs ls -l -rw-rw-r-- 1 mdhender staff 334 Sep 27 15:33 public/about-time/index.html -rw-rw-r-- 1 mdhender staff 645 Sep 27 15:33 public/index.html -rw-rw-r-- 1 mdhender staff 358 Sep 27 15:33 public/post/first-post/index.html -rw-rw-r-- 1 mdhender staff 0 Sep 27 15:33 public/post/index.html -rw-rw-r-- 1 mdhender staff 342 Sep 27 15:33 public/post/second-post/index.html  Knowing that hugo is using the slug to generate the file name, the simplest solution is to change the slug. Let\u0026rsquo;s do it the hard way and change the permalink in the configuration file.\n$ vi config.toml [permalinks] page = \u0026quot;/:title/\u0026quot; about = \u0026quot;/:filename/\u0026quot;  Generate the web site and verify that this didn\u0026rsquo;t work. Hugo lets \u0026ldquo;slug\u0026rdquo; or \u0026ldquo;URL\u0026rdquo; override the permalinks setting in the configuration file. Go ahead and comment out the slug in content/about.md, then generate the web site to get it to be created in the right place.\nSharing Templates If you\u0026rsquo;ve been following along, you probably noticed that posts have titles in the browser and the home page doesn\u0026rsquo;t. That\u0026rsquo;s because we didn\u0026rsquo;t put the title in the home page\u0026rsquo;s template (layouts/index.html). That\u0026rsquo;s an easy thing to do, but let\u0026rsquo;s look at a different option.\nWe can put the common bits into a shared template that\u0026rsquo;s stored in the themes/zafta/layouts/partials/ directory.\nCreate the Header and Footer Partials In Hugo, a partial is a sugar-coated template. Normally a template reference has a path specified. Partials are different. Hugo searches for them along a TODO defined search path. This makes it easier for end-users to override the theme\u0026rsquo;s presentation.\n$ vi themes/zafta/layouts/partials/header.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; :wq $ vi themes/zafta/layouts/partials/footer.html \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq  Update the Home Page Template to Use the Partials The most noticeable difference between a template call and a partials call is the lack of path:\n{{ template \u0026quot;theme/partials/header.html\u0026quot; . }}  versus\n{{ partial \u0026quot;header.html\u0026quot; . }}  Both pass in the context.\nLet\u0026rsquo;s change the home page template to use these new partials.\n$ vi themes/zafta/layouts/index.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;posts\u0026lt;/h1\u0026gt; {{ range first 10 .Data.Pages }} {{ if eq .Type \u0026quot;post\u0026quot;}} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} \u0026lt;h1\u0026gt;pages\u0026lt;/h1\u0026gt; {{ range .Data.Pages }} {{ if or (eq .Type \u0026quot;page\u0026quot;) (eq .Type \u0026quot;about\u0026quot;) }} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026quot;{{ .Permalink }}\u0026quot;\u0026gt;{{ .Type }} - {{ .Title }} - {{ .RelPermalink }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq  Generate the web site and verify the results. The title on the home page is now \u0026ldquo;your title here\u0026rdquo;, which comes from the \u0026ldquo;title\u0026rdquo; variable in the config.toml file.\nUpdate the Default Single Template to Use the Partials $ vi themes/zafta/layouts/_default/single.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq  Generate the web site and verify the results. The title on the posts and the about page should both reflect the value in the markdown file.\nAdd “Date Published” to Posts It\u0026rsquo;s common to have posts display the date that they were written or published, so let\u0026rsquo;s add that. The front matter of our posts has a variable named \u0026ldquo;date.\u0026rdquo; It\u0026rsquo;s usually the date the content was created, but let\u0026rsquo;s pretend that\u0026rsquo;s the value we want to display.\nAdd “Date Published” to the Template We\u0026rsquo;ll start by updating the template used to render the posts. The template code will look like:\n{{ .Date.Format \u0026quot;Mon, Jan 2, 2006\u0026quot; }}  Posts use the default single template, so we\u0026rsquo;ll change that file.\n$ vi themes/zafta/layouts/_default/single.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;{{ .Date.Format \u0026quot;Mon, Jan 2, 2006\u0026quot; }}\u0026lt;/h2\u0026gt; {{ .Content }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq  Generate the web site and verify the results. The posts now have the date displayed in them. There\u0026rsquo;s a problem, though. The \u0026ldquo;about\u0026rdquo; page also has the date displayed.\nAs usual, there are a couple of ways to make the date display only on posts. We could do an \u0026ldquo;if\u0026rdquo; statement like we did on the home page. Another way would be to create a separate template for posts.\nThe \u0026ldquo;if\u0026rdquo; solution works for sites that have just a couple of content types. It aligns with the principle of \u0026ldquo;code for today,\u0026rdquo; too.\nLet\u0026rsquo;s assume, though, that we\u0026rsquo;ve made our site so complex that we feel we have to create a new template type. In Hugo-speak, we\u0026rsquo;re going to create a section template.\nLet\u0026rsquo;s restore the default single template before we forget.\n$ mkdir themes/zafta/layouts/post $ vi themes/zafta/layouts/_default/single.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq  Now we\u0026rsquo;ll update the post\u0026rsquo;s version of the single template. If you remember Hugo\u0026rsquo;s rules, the template engine will use this version over the default.\n$ vi themes/zafta/layouts/post/single.html {{ partial \u0026quot;header.html\u0026quot; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;{{ .Date.Format \u0026quot;Mon, Jan 2, 2006\u0026quot; }}\u0026lt;/h2\u0026gt; {{ .Content }} {{ partial \u0026quot;footer.html\u0026quot; . }} :wq  Note that we removed the date logic from the default template and put it in the post template. Generate the web site and verify the results. Posts have dates and the about page doesn\u0026rsquo;t.\nDon\u0026rsquo;t Repeat Yourself DRY is a good design goal and Hugo does a great job supporting it. Part of the art of a good template is knowing when to add a new template and when to update an existing one. While you\u0026rsquo;re figuring that out, accept that you\u0026rsquo;ll be doing some refactoring. Hugo makes that easy and fast, so it\u0026rsquo;s okay to delay splitting up a template.\n","date":1435146646,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1435146646,"objectID":"8aeee78b72c6128f92e47a724944e151","permalink":"/blog/creating-a-new-theme/","publishdate":"2015-06-24T13:50:46+02:00","relpermalink":"/blog/creating-a-new-theme/","section":"blog","summary":"Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nWe\u0026rsquo;ll start with creating a new site with a very basic template.","tags":["theme"],"title":"Creating a new theme","type":"blog"},{"authors":null,"categories":null,"content":" We are here to help you Are you curious about something? Do you have some kind of problem with our products? As am hastily invited settled at limited civilly fortune me. Really spring in extent an by. Judge but built gay party world. Of so am he remember although required. Bachelor unpacked be advanced at. Confined in declared marianne is vicinity.\nPlease feel free to contact us, our customer service center is working for you 24\u0026frasl;7.\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"3c4864f00d23f7ea35511ec930ce1d9c","permalink":"/contact/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/contact/","section":"","summary":"We are here to help you Are you curious about something? Do you have some kind of problem with our products? As am hastily invited settled at limited civilly fortune me. Really spring in extent an by. Judge but built gay party world. Of so am he remember although required. Bachelor unpacked be advanced at. Confined in declared marianne is vicinity.\nPlease feel free to contact us, our customer service center is working for you 24\u0026frasl;7.","tags":null,"title":"Contact","type":"page"},{"authors":null,"categories":null,"content":" Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.\n1. WHAT TO DO IF I HAVE STILL NOT RECEIVED THE ORDER? Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.\n Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam tincidunt mauris eu risus. Vestibulum auctor dapibus neque.  2. WHAT ARE THE POSTAL RATES? Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\u0026rsquo;t heard of them accusamus labore sustainable VHS.\n3. DO YOU SEND OVERSEAS? Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\u0026rsquo;t heard of them accusamus labore sustainable VHS.\n4. WHY ARE YOU MORE EXPENSIVE THAN OTHERS? Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.\n Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam tincidunt mauris eu risus. Vestibulum auctor dapibus neque.  5. ANOTHER IMPORTANT QUESTION Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.\n Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam tincidunt mauris eu risus. Vestibulum auctor dapibus neque.   In case you haven\u0026rsquo;t found the answer for your question please feel free to contact us, our customer support will be happy to help you.\n ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"4a1318da06786ac52626178ca960109e","permalink":"/faq/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/faq/","section":"","summary":"Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.\n1. WHAT TO DO IF I HAVE STILL NOT RECEIVED THE ORDER? Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante.","tags":null,"title":"FAQ","type":"page"}]